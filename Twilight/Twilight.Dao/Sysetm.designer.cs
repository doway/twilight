#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3623
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MorningBird.Dao
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="MonitorLog")]
	public partial class SysetmDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public SysetmDataContext() : 
				base(global::MorningBird.Dao.Properties.Settings.Default.MonitorLogConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public SysetmDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SysetmDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SysetmDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SysetmDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[Function(Name="dbo.BU_Delete")]
		public int BU_Delete([Parameter(Name="BUID", DbType="SmallInt")] System.Nullable<short> bUID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bUID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.BU_Insert")]
		public int BU_Insert([Parameter(Name="BUName", DbType="VarChar(50)")] string bUName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bUName);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.BU_Update")]
		public int BU_Update([Parameter(Name="BUName", DbType="VarChar(50)")] string bUName, [Parameter(Name="BUID", DbType="SmallInt")] System.Nullable<short> bUID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bUName, bUID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetAllBU")]
		public ISingleResult<GetAllBUResult> GetAllBU()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetAllBUResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetAllPosition")]
		public ISingleResult<GetAllPositionResult> GetAllPosition()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetAllPositionResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetServerBUMapping")]
		public ISingleResult<GetServerBUMappingResult> GetServerBUMapping([Parameter(Name="Keyword", DbType="VarChar(1000)")] string keyword, [Parameter(DbType="Int")] System.Nullable<int> pageNum, [Parameter(DbType="Int")] System.Nullable<int> pageSize, [Parameter(Name="VirtualRowsCount", DbType="Int")] ref System.Nullable<int> virtualRowsCount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), keyword, pageNum, pageSize, virtualRowsCount);
			virtualRowsCount = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((ISingleResult<GetServerBUMappingResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ServerBUMapping_Delete")]
		public int ServerBUMapping_Delete([Parameter(Name="BUID", DbType="SmallInt")] System.Nullable<short> bUID, [Parameter(Name="ServerIP", DbType="VarChar(50)")] string serverIP)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bUID, serverIP);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ServerBUMapping_Insert")]
		public int ServerBUMapping_Insert([Parameter(Name="BUID", DbType="SmallInt")] System.Nullable<short> bUID, [Parameter(Name="ServerIP", DbType="VarChar(50)")] string serverIP, [Parameter(Name="ServerName", DbType="VarChar(50)")] string serverName, [Parameter(Name="Status", DbType="SmallInt")] System.Nullable<short> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bUID, serverIP, serverName, status);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ServerBUMapping_Update")]
		public int ServerBUMapping_Update([Parameter(Name="BUID", DbType="SmallInt")] System.Nullable<short> bUID, [Parameter(Name="ServerIP", DbType="VarChar(50)")] string serverIP, [Parameter(Name="ServerName", DbType="VarChar(50)")] string serverName, [Parameter(Name="Status", DbType="SmallInt")] System.Nullable<short> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bUID, serverIP, serverName, status);
			return ((int)(result.ReturnValue));
		}
	}
	
	public partial class GetAllBUResult
	{
		
		private short _BUID;
		
		private string _BUName;
		
		public GetAllBUResult()
		{
		}
		
		[Column(Storage="_BUID", DbType="SmallInt NOT NULL")]
		public short BUID
		{
			get
			{
				return this._BUID;
			}
			set
			{
				if ((this._BUID != value))
				{
					this._BUID = value;
				}
			}
		}
		
		[Column(Storage="_BUName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BUName
		{
			get
			{
				return this._BUName;
			}
			set
			{
				if ((this._BUName != value))
				{
					this._BUName = value;
				}
			}
		}
	}
	
	public partial class GetAllPositionResult
	{
		
		private int _PositionID;
		
		private System.Nullable<short> _BUID;
		
		private string _PositionName;
		
		private System.Nullable<byte> _AccessType;
		
		private byte _Status;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private short _CreatedBy;
		
		private System.Nullable<short> _UpdatedBy;
		
		public GetAllPositionResult()
		{
		}
		
		[Column(Storage="_PositionID", DbType="Int NOT NULL")]
		public int PositionID
		{
			get
			{
				return this._PositionID;
			}
			set
			{
				if ((this._PositionID != value))
				{
					this._PositionID = value;
				}
			}
		}
		
		[Column(Storage="_BUID", DbType="SmallInt")]
		public System.Nullable<short> BUID
		{
			get
			{
				return this._BUID;
			}
			set
			{
				if ((this._BUID != value))
				{
					this._BUID = value;
				}
			}
		}
		
		[Column(Storage="_PositionName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PositionName
		{
			get
			{
				return this._PositionName;
			}
			set
			{
				if ((this._PositionName != value))
				{
					this._PositionName = value;
				}
			}
		}
		
		[Column(Storage="_AccessType", DbType="TinyInt")]
		public System.Nullable<byte> AccessType
		{
			get
			{
				return this._AccessType;
			}
			set
			{
				if ((this._AccessType != value))
				{
					this._AccessType = value;
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
		
		[Column(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this._DateUpdated = value;
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="SmallInt NOT NULL")]
		public short CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[Column(Storage="_UpdatedBy", DbType="SmallInt")]
		public System.Nullable<short> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
	}
	
	public partial class GetServerBUMappingResult
	{
		
		private System.Nullable<long> _ROW_NO;
		
		private short _BUID;
		
		private string _BUNAME;
		
		private string _ServerIP;
		
		private string _ServerName;
		
		private System.Nullable<short> _Status;
		
		public GetServerBUMappingResult()
		{
		}
		
		[Column(Storage="_ROW_NO", DbType="BigInt")]
		public System.Nullable<long> ROW_NO
		{
			get
			{
				return this._ROW_NO;
			}
			set
			{
				if ((this._ROW_NO != value))
				{
					this._ROW_NO = value;
				}
			}
		}
		
		[Column(Storage="_BUID", DbType="SmallInt NOT NULL")]
		public short BUID
		{
			get
			{
				return this._BUID;
			}
			set
			{
				if ((this._BUID != value))
				{
					this._BUID = value;
				}
			}
		}
		
		[Column(Storage="_BUNAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BUNAME
		{
			get
			{
				return this._BUNAME;
			}
			set
			{
				if ((this._BUNAME != value))
				{
					this._BUNAME = value;
				}
			}
		}
		
		[Column(Storage="_ServerIP", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ServerIP
		{
			get
			{
				return this._ServerIP;
			}
			set
			{
				if ((this._ServerIP != value))
				{
					this._ServerIP = value;
				}
			}
		}
		
		[Column(Storage="_ServerName", DbType="VarChar(50)")]
		public string ServerName
		{
			get
			{
				return this._ServerName;
			}
			set
			{
				if ((this._ServerName != value))
				{
					this._ServerName = value;
				}
			}
		}
		
		[Column(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
